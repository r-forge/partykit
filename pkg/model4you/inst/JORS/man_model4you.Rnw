%% Journal of Open Research Software Latex template -- Created By Stephen Bonner and John Brennan, Durham Universtiy, UK.

\documentclass{josr}

%% packages
\usepackage{natbib}

\usepackage{subfig}
\usepackage{amsmath}
\usepackage{tikz}
\usetikzlibrary{shapes,arrows,positioning}




%% Set the header information
\pagestyle{fancy}
\definecolor{mygray}{gray}{0.6}
\renewcommand\headrule{}
\rhead{\footnotesize 3}
\rhead{\textcolor{gray}{UP JORS software Latex paper template version 0.1}}

\begin{document}


<<setup, echo=FALSE>>=
library("knitr")
knitr::opts_chunk$set(cache = TRUE, message = FALSE, fig.align = "center")

knit_hooks$set(inline = function(x) { 
  if (is.numeric(x)) return(knitr:::format_sci(x, 'latex')) 
  highr:::hi_latex(x) 
}) 
@


{\bf Software paper for submission to the Journal of Open Research Software} \\

To complete this template, please replace the blue text with your own. The paper has three main sections: (1) Overview; (2) Availability; (3) Reuse potential. \\

Please submit the completed paper to: editor.jors@ubiquitypress.com

\rule{\textwidth}{1pt}

\section*{(1) Overview}

\vspace{0.5cm}

\section*{Title}
model4you: An R package for personalised treatment effect estimation


\section*{Paper Authors}
1. Seibold, Heidi; 2. Zeileis, Achim; 3. Hothorn, Torsten



\section*{Paper Author Roles and Affiliations}
1. PhD student; Biostatistics Department, Epidemiology, Biostatistics \&
Prevention Institute, University of Zurich

2. Professor; Department of Statistics, Faculty of Economics and Statistics,
University of Innsbruck

3. Professor; Biostatistics Department, Epidemiology, Biostatistics \&
Prevention Institute, University of Zurich



\section*{Abstract}
Typical models estimating treatment effects assume that the treatment effect is
the same for all individuals.  Model-based recursive partitioning allows to
relax this assumption and allows for the estimation of stratified treatment
effects (model-based trees) or even personalised treatment effects (model-based
forests).  With model-based trees one can compute treatment effects for
different strata of individuals. The strata are found in a data driven fashion
and depend on characteristics of the individuals.  Model-based random forests
allow for a similarity estimation between individuals in terms of model
estimates. The similarity measure can then be used to estimate personalised
models.  The R package \emph{model4you} implements these stratified and
personalised models with a focus on ease of use and interpretability so that
clinicians and other users can take the model they usually use for the
estimation of the average treatment effect and with a few lines of code get a
visualisation that is easy to understand and interpret.

%\textcolor{blue}{A short (ca. 100 word) summary of the software being described: what problem the software addresses, how it was implemented and architected, where it is stored, and its reuse potential.}

\section*{Keywords}

personalised medicine; subgroup analysis; model-based recursive partitioning;
unbiased trees; treatment effect; random forest


\section*{Introduction}

%\textcolor{blue}{An overview of the software, how it was produced, and the research for which it has been used, including references to relevant research articles. A short comparison with software which implements similar functionality should be included in this section. }
Studies in various fields randomly assign individuals to one of two groups with
different exposure and then measure a response. For example, in clinical trials
patients are assigned to one of two treatment groups where usually one
treatment group receives a new treatment or drug and the other treatment group
receives the standard of care or a placebo.

Treatment effect estimation is often done using simple models with the binary
treatment indicator as only covariate. In the example of a clinical trial the
treatment indicator would be $1$ if the patient receives the new treatment and
$0$ if the patient receives standard of care.  In R such a simple model can be
estimated as follows:
<<eval=FALSE>>=
base_model <- model(response ~ treatment, data)
@
with \Sexpr{'response'} being the response measured, \Sexpr{'treatment'} being
the treatment indicator and \Sexpr{'data'} being the data set containing these
variables.  The function \Sexpr{'model()'} can be replaced for example by
\Sexpr{'lm()'} to estimate a linear model, \Sexpr{'glm()'} to estimate a
generalised linear model or \Sexpr{'survreg()'} to estimate a parametric
survival model.  These models estimate intercept and treatment effect for all
individuals in the \Sexpr{'data'} and allow for predicting the response of
other individuals given they do or don't receive the treatment of interest.

For cases where the assumption that all individuals have the same intercept and
treatment effect is too strict the R package \emph{model4you} offers two
options: 

\paragraph{(1) Model-based trees} identify subgroups where within the subgroups
the model parameters are similar and between groups the model parameters are
different. This is achieved by finding instabilities in the model parameters
with respect to a variable (characteristicum) and recursively partitioning the
data into groups. If, for example the algorithm finds that men and women have
differing treatment effects, the data is partitioned into two subgroups.
Details on model-based trees in general can be found in
\citep{zeileis_model-based_2008} and for the special use case in clinical trial
in \citep{seibold_model-based_2016}.  Just a single line of code lets the user
compute a model-based tree in R:
<<eval=FALSE>>=
strat_models <- pmtree(base_model)
@

\paragraph{(2) Personalised models} use model-based random forests to estimate
similarity of individuals in terms of model parameters. For each individual a
personalised model can be estimated based on a weighted set of the original
data, where the similarity measure corresponds to the weight. Details on the
personalised models can be found in \citep{seibold_individual_2017}.  To
compute personalised models for all observations in the training data is
simple:
<<eval=FALSE>>=
pm_forest <- pmforest(base_model)
pers_models <- pmodel(pm_forest)
@ 

% \begin{figure}
% \centering
% \include{pmworkflow}
% \caption{Personalised models workflow: from real world to interpretable
% visualisation.}
% \end{figure}


In the following we will present two example applications for model-based trees
and personalised models. For this we need to load the package and -- to ensure
reproducibility -- set a random seed. Also for plots we will need packages
\emph{ggplot2} and \emph{gridExtra}.
<<prep>>=
library("model4you")
set.seed(2017)

library("ggplot2")
theme_set(theme_classic())
library("gridExtra")
@

\paragraph{Mathematics exam analysis}
In 2014 first-year business and economics students at the University of Innsbruck
were divided into two examination groups. Group 1 wrote the exam in the morning and
group 2 started after the first group finished.

<<math_data>>=
data("MathExam14W", package = "psychotools")

## scale points achieved to [0, 100] percent
MathExam14W$tests <- 100 * MathExam14W$tests/26
MathExam14W$pcorrect <- 100 * MathExam14W$nsolved/13

## select variables to be used
MathExam <- MathExam14W[ , c("pcorrect", "group", "tests", "study",
                             "attempt", "semester", "gender")]
@

<<math_bmod, fig.height = 5, out.width = '0.7\\textwidth', fig.cap = "Base model for Mathematics Exam data.">>=  
## compute base model
bmod_math <- lm(pcorrect ~ group, data = MathExam)
lmplot(bmod_math, densest = TRUE)

## extract coefficients and confidence intervals
coefs <- coef(bmod_math)
ci <- confint(bmod_math)
coefs <- cbind(coefs, ci)

## prepare for plotting
digits <- 2
cf <- format(round(coefs, digits), nsmall = digits)
colnams <- colnames(cf)
colnams[1] <- "theta"
gridExtra::grid.table(
  cf, cols = colnams,
  theme = ttheme_minimal(colhead = list(fg_params = list(parse = TRUE))),
  vp = viewport(x = 0.5, y = 0, width = 0.7, height = 0.4,
                just = c("center", "bottom"))
)
@

<<math_tree, fig.width = 13, fig.cap = "Personalised model tree for GBSG2 data.">>=  
## compute tree
(tr_math <- pmtree(bmod_math, control = ctree_control(maxdepth = 2)))
plot(tr_math, terminal_panel = node_pmterminal(tr_math, 
                                               plotfun = lmplot, 
                                               confint = TRUE))
@

<<math_methods>>=  
## predict
newdat <- MathExam[1:5, ]

# terminal nodes
(nodes <- predict(tr_math, type = "node", newdata = newdat))

# response
(pr <- predict(tr_math, type = "pass", newdata = newdat))

# response including confidence intervals, see ?predict.lm
(pr1 <- predict(tr_math, type = "pass", newdata = newdat,
                predict_args = list(interval = "confidence")))
@

<<math_pmodl>>=
forest_math <- pmforest(bmod_math)
pmod_math <- pmodel(forest_math)
head(pmod_math)
@


<<math_dp1, fig.width=4, fig.height=4, out.width='.48\\linewidth', fig.cap="Dependence plot for percentage of tests successfully solved.", fig.subcap=c("Scatter plot.", "Bee plot.")>>=
dpdat_math <- cbind(pmod_math, MathExam)

ggplot(dpdat_math, aes(x = tests, y = group2, color = tests)) +
  geom_point(alpha = 0.2, size = 1) + 
  geom_smooth(fill = NA, method = "loess") +
  theme(legend.position = "none")

library("ggbeeswarm")
ggplot(dpdat_math, aes(x = tests, y = group2, color = tests)) +
  geom_quasirandom(alpha = 0.5, size = 1) +
  theme(legend.position = "none")
@

<<math_dp2, fig.width=4, fig.height=4, out.width='.48\\linewidth', fig.cap="Dependence plots for the number of previous attempts and gender.", fig.subcap=c('Number of previous attempts.', 'Gender.')>>=
ggplot(dpdat_math, aes(x = attempt, y = group2, color = attempt)) +
  geom_quasirandom(alpha = 0.5) +
  theme(legend.position = "none")

ggplot(dpdat_math, aes(x = gender, y = group2, color = gender)) +
  geom_quasirandom(alpha = 0.5) +
  theme(legend.position = "none")
@


% \paragraph{Analysis of the German Breast Cancer Study Group 2}
% 
% <<GBSG2_prep>>=
% library("survival")
% data("GBSG2", package = "TH.data")
% @
% 
% <<GBSG2_bmod, fig.height = 5, out.width = '0.7\\textwidth', fig.cap = "Base model for GBSG2 data.">>=
% bmod <- survreg(Surv(time, cens) ~ horTh, data = GBSG2, model = TRUE)
% survplot(bmod)
% 
% ## extract coefficients and confidence intervals
% coefs <- coef(bmod)
% ci <- confint(bmod)
% coefs <- cbind(coefs, ci)
% 
% ## prepare for plotting
% digits <- 2
% cf <- format(round(coefs, digits), nsmall = digits)
% colnams <- colnames(cf)
% colnams[1] <- "theta"
% gridExtra::grid.table(
%   cf, cols = colnams,
%   theme = ttheme_minimal(colhead = list(fg_params = list(parse = TRUE))),
%   vp = viewport(x = 0, y = 0, width = 0.7, height = 0.4,
%                 just = c("left", "bottom"))
% )
% @
% 
% <<GBSG2_tree, fig.width = 9, fig.cap = "Personalised model tree for GBSG2 data.">>=
% tr <- pmtree(bmod)
% plot(tr, terminal_panel = node_pmterminal(tr, plotfun = survplot, 
%                                           confint = TRUE))
% @
% 
% <<GBSG2_forest>>=
% frst <- pmforest(bmod)
% @
% 
% <<GBSG_pmod1>>=
% newpatient_i <- data.frame(age = 60, menostat = "Post", tsize = 20, tgrade = "II",
%                            pnodes = 3, progrec = 50, estrec = 60)
% mod_i <- pmodel(x = frst, fun = identity, newdata = newpatient_i)
% @
% 
% <<GBSG2_pmod>>=
% coeffun <- function(model) {
%   ## model coefficients
%   coefs <- c(coef(model), scale = model$scale)
%   
%   ## difference in median survival 
%   p = 0.5
%   coefs["median_s0"] <- qweibull(p = p, shape = 1/coefs["scale"], 
%                                  scale = exp(coefs["(Intercept)"]))
%   coefs["median_s1"] <- qweibull(p = p, shape = 1/coefs["scale"], 
%                                  scale = exp(coefs["(Intercept)"] + coefs[2]))
%   coefs["median_sdiff"] <- coefs["median_s1"] - coefs["median_s0"]
%   
%   return(coefs)
% }
% coefs <- pmodel(x = frst, fun = coeffun, OOB = TRUE)
% 
% ## add to data and plot
% dpdat <- cbind(coefs, GBSG2)
% znam <- names(GBSG2)[!(names(GBSG2) %in% c("horTh", "time", "cens"))]
% 
% dplot <- function(z) {
%   p <- ggplot(dpdat, aes_string(x = z, y = "median_sdiff")) 
%   if(is.factor(dpdat[, z])) {
%     p + geom_boxplot()
%   } else {
%     p + geom_point(alpha = 0.2) + 
%       geom_smooth(fill = NA, method = "loess")
%   }
% }
% dps <- lapply(znam, dplot)
% do.call(grid.arrange, dps)
% 
% do.call(grid.arrange, lapply(dps, function(p) {
%   dmin <- min(dpdat$median_sdiff)
%   dq <- quantile(dpdat$median_sdiff, 0.99)
%   p + coord_cartesian(ylim = c(dmin, dq))
% }))
% @

\section*{Implementation and architecture}
\begin{figure}
\centering
\include{treefamily}
\caption{The family of model-based trees and forests. Square nodes represent
functions, round nodes represent function arguments. Solid lines represent
direct usage, dashed lines indirect usage (iteration between tree and model
estimation), and dotted lines represent close similarity but no dependency.}
\label{fig:family}
\end{figure}

The R package \emph{model4you} is based on the \emph{partykit} package. In
fact, everything that can be done with \emph{model4you} can already be done
with \emph{partykit} (version $\geq$ 1.2-0). \emph{model4you} is merely a
convenience interface and focusses on ease of use and interpretability. Various
other packages depend on \emph{partykit}. Figure~\ref{fig:family} shows all
packages depending on \emph{partykit} that deal with model-based trees and
forests. Functions \Sexpr{'partykit::ctree()'} and \Sexpr{'partykit::mob()'}
provide the basis for all others. Note that \Sexpr{'partykit::ctree()'}
computes conditional inference trees but by specifying argument
\Sexpr{'ytrafo'} appropriately, it can also compute model-based trees. This
functionality is used for packages \emph{disttree} (partitioning of Generalized
Additive Models for Location, Scale and Shape), \emph{trtf} (partitioning of
transformation models) and \emph{model4you}.  Many of the packages shown in
Figure~\ref{fig:family} are available on CRAN.  The remaining packages are
under development and available on
\url{https://r-forge.r-project.org/projects/partykit/}.

\textcolor{blue}{How the software was implemented, with details of the architecture where relevant. Use of relevant diagrams is appropriate. Please also describe any variants and associated implementation differences.}



\section*{Quality control}

Tests, code in this manual, examples in documentation

\textcolor{blue}{Detail the level of testing that has been carried out on the code (e.g. unit, functional, load etc.), and in which environments. If not already included in the software documentation, provide details of how a user could quickly understand if the software is working (e.g. providing examples of running the software with sample input and output data). }

\section*{(2) Availability}
\vspace{0.5cm}
\section*{Operating system}

Should work on all operating systems that run R.
\textcolor{blue}{Please include minimum version compatibility.}

\section*{Programming language}
R (version 3.1.0 or higher)

\section*{Additional system requirements}
None.
\textcolor{blue}{E.g. memory, disk space, processor, input devices, output devices.}

\section*{Dependencies}
R, partykit package (version 1.2 or higher)

\section*{List of contributors}
Same as the authors:
Heidi Seibold, Achim Zeileis and Torsten Hothorn


\section*{Software location:}

{\bf Archive} \textcolor{blue}{(e.g. institutional repository, general repository) (required ??? please see instructions on journal website for depositing archive copy of software in a suitable repository)} 

\begin{description}[noitemsep,topsep=0pt]
\item[Name:] CRAN
\item[Persistent identifier:] \url{https://cran.r-project.org/web/packages/model4you/index.html} %TODO upload to CRAN
\item[Licence:] GPL-2
\item[Publisher:] Heidi Seibold 
\item[Version published:] \textcolor{blue}{The version number of the software archived.}
\item[Date published:] \textcolor{blue}{dd/mm/yy}
\end{description}



{\bf Code repository} \textcolor{blue}{(e.g. SourceForge, GitHub etc.) (required)}

\begin{description}[noitemsep,topsep=0pt]
\item[Name:] R-forge
\item[Persistent identifier:] \url{https://r-forge.r-project.org/projects/partykit/}
\item[Licence:] GPL-2
\item[Date published:] 
\end{description}


\section*{Language}

English


\section*{(3) Reuse potential}

The software is intentionally written to make usage as simple as possible. We
hope that researchers use it for analysis of:
\begin{itemize}
\item Clinical trials
\item A-B testing
\item Other situations where the comparison of two decisions is of interest
\end{itemize}
We encourage users to use the partykit forum on R-forge
(\url{https://r-forge.r-project.org/forum/forum.php?forum_id=852}) or the party
tag on Stackoverflow (\url{http://stackoverflow.com/questions/tagged/party}) in
case of questions or problems.

\textcolor{blue}{Please describe in as much detail as possible the ways in which the software could be reused by other researchers both within and outside of your field. This should include the use cases for the software, and also details of how the software might be modified or extended (including how contributors should contact you) if appropriate. Also you must include details of what support mechanisms are in place for this software (even if there is no support).}

\section*{Acknowledgements}

\textcolor{blue}{Please add any relevant acknowledgements to anyone else who supported the project in which the software was created, but did not work directly on the software itself.}


\section*{Funding statement}
Heidi Seibold and Torsten Hothorn were financially supported by the Swiss
National Science Foundation (grant 205321\_163456).

\textcolor{blue}{If the software resulted from funded research please give the funder and grant number.}



\section*{Competing interests}

The authors declare that they have no competing interests.


% \section*{References}
\bibliographystyle{plain}
\bibliography{ref_model4you}

% \textcolor{blue}{Please enter references in the Harvard style and include a DOI where available, citing them in the text with a number in square brackets, e.g. \\ }
% 
% \textcolor{blue}{[1] Piwowar, H A 2011 Who Shares? Who Doesn't? Factors Associated with Openly Archiving Raw Research Data. PLoS ONE 6(7): e18657. DOI: \\ http://dx.doi.org/10.1371/journal.pone.0018657.}

\vspace{2cm}

\rule{\textwidth}{1pt}

{ \bf Copyright Notice} \\
Authors who publish with this journal agree to the following terms: \\

Authors retain copyright and grant the journal right of first publication with the work simultaneously licensed under a  \href{http://creativecommons.org/licenses/by/3.0/}{Creative Commons Attribution License} that allows others to share the work with an acknowledgement of the work's authorship and initial publication in this journal. \\

Authors are able to enter into separate, additional contractual arrangements for the non-exclusive distribution of the journal's published version of the work (e.g., post it to an institutional repository or publish it in a book), with an acknowledgement of its initial publication in this journal. \\

By submitting this paper you agree to the terms of this Copyright Notice, which will apply to this submission if and when it is published by this journal.


\end{document}
