
R version 3.4.4 (2018-03-15) -- "Someone to Lean On"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("model4you")
Loading required package: partykit
Loading required package: grid
Loading required package: libcoin
Loading required package: mvtnorm
> library("mvtnorm")
> library("survival")
> set.seed(123)
> 
> ## function to simulate the data
> sim_data <- function(n = 500, p = 10, beta = 3, sd = 1){
+ 
+   ## treatment
+   lev <- c("C", "A")
+   a <- rep(factor(lev, labels = lev, levels = lev), length = n)
+ 
+   ## correlated z variables
+   sigma <- diag(p)
+   sigma[sigma == 0] <- 0.2
+   ztemp <- rmvnorm(n, sigma = sigma)
+   z <- (pnorm(ztemp) * 2 * pi) - pi
+   colnames(z) <- paste0("z", 1:ncol(z))
+   z1 <- z[,1]
+ 
+   ## outcome
+   y <- 7 + 0.2 * (a %in% "A") + beta * cos(z1) * (a %in% "A") + rnorm(n, 0, sd)
+ 
+   data.frame(y = y, a = a, z)
+ }
> 
> ## simulate data
> beta <- 3
> ntrain <- 500
> ntest <- 100
> simdata <- simdata_s <- sim_data(p = 5, beta = beta, n = ntrain)
> tsimdata <- tsimdata_s <- sim_data(p = 5, beta = beta, n = ntest)
> simdata_s$cens <- rep(1, ntrain)
> tsimdata_s$cens <- rep(1, ntest)
> 
> ## base model
> basemodel_lm <- lm(y ~ a, data = simdata)
> basemodel_wb <- survreg(Surv(y, cens) ~ a, data = simdata_s)
> 
> ## forest
> frst_lm <- pmforest(basemodel_lm, ntree = 10,
+                     perturb = list(replace = FALSE, fraction = 0.632),
+                     control = ctree_control(mincriterion = 0, lookahead = TRUE))
No data given. I'm using data set simdata from the current environment parent.frame(). Please check if that is what you want.
> frst_wb <- pmforest(basemodel_wb, ntree = 10,
+                     perturb = list(replace = FALSE, fraction = 0.632),
+                     control = ctree_control(mincriterion = 0, lookahead = TRUE))
No data given. I'm using data set simdata_s from the current environment parent.frame(). Please check if that is what you want.
> 
> ## personalised models
> coefs_lm <- pmodel(x = frst_lm, newdata = tsimdata)
> summary(coefs_lm)
  (Intercept)          aA          
 Min.   :6.083   Min.   :-2.09411  
 1st Qu.:6.832   1st Qu.:-0.65812  
 Median :7.097   Median : 0.08235  
 Mean   :7.061   Mean   : 0.04625  
 3rd Qu.:7.277   3rd Qu.: 0.77876  
 Max.   :7.667   Max.   : 2.34688  
> 
> 
> coeffun <- function(model) {
+   ## model coefficients
+   coefs <- c(coef(model), scale = model$scale)
+ 
+   ## difference in median survival
+   p = 0.5
+   coefs["median_s0"] <- qweibull(p = p, shape = 1/coefs["scale"],
+                                  scale = exp(coefs["(Intercept)"]))
+   coefs["median_s1"] <- qweibull(p = p, shape = 1/coefs["scale"],
+                                  scale = exp(coefs["(Intercept)"] + coefs["aA"]))
+   coefs["median_sdiff"] <- coefs["median_s1"] - coefs["median_s0"]
+ 
+   return(coefs)
+ }
> coefs_wb <- pmodel(x = frst_wb, newdata = tsimdata_s,
+                    fun = coeffun)
> summary(coefs_wb)
  (Intercept)          aA               scale          median_s0    
 Min.   :1.865   Min.   :-0.19163   Min.   :0.1189   Min.   :5.726  
 1st Qu.:1.972   1st Qu.: 0.02691   1st Qu.:0.1713   1st Qu.:6.640  
 Median :1.993   Median : 0.09052   Median :0.2071   Median :6.849  
 Mean   :1.987   Mean   : 0.08881   Mean   :0.2079   Mean   :6.766  
 3rd Qu.:2.016   3rd Qu.: 0.18074   3rd Qu.:0.2348   3rd Qu.:6.961  
 Max.   :2.060   Max.   : 0.31687   Max.   :0.3339   Max.   :7.481  
   median_s1      median_sdiff    
 Min.   :5.522   Min.   :-1.2053  
 1st Qu.:6.850   1st Qu.: 0.1870  
 Median :7.373   Median : 0.6193  
 Mean   :7.440   Mean   : 0.6739  
 3rd Qu.:8.074   3rd Qu.: 1.2791  
 Max.   :9.123   Max.   : 2.4165  
> 
> 
> ## Variable importance
> set.seed(123)
> (vi_lm <- varimp(frst_lm))
       z1        z2        z3        z4        z5 
276.42033  94.80836  56.22248  76.87214  49.14115 
> (vi_wb <- varimp(frst_wb))
       z1        z2        z3        z4        z5 
175.05534  55.50342  30.40423  26.41688  38.69822 
> 
> proc.time()
   user  system elapsed 
 16.864   0.059  16.922 
