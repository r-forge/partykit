
R version 3.4.3 (2017-11-30) -- "Kite-Eating Tree"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("model4you")
Loading required package: partykit
Loading required package: grid
Loading required package: libcoin
Loading required package: mvtnorm
Loading required package: rpart
> library("mvtnorm") 
> library("survival")
> 
> ## function to simulate the data
> sim_data <- function(n = 500, p = 10, beta = 3, sd = 1){
+   
+   ## treatment
+   lev <- c("C", "A")
+   a <- rep(factor(lev, labels = lev, levels = lev), length = n)
+   
+   ## correlated z variables
+   sigma <- diag(p) 
+   sigma[sigma == 0] <- 0.2
+   ztemp <- rmvnorm(n, sigma = sigma)
+   z <- (pnorm(ztemp) * 2 * pi) - pi  
+   colnames(z) <- paste0("z", 1:ncol(z))
+   z1 <- z[,1]
+   
+   ## outcome
+   y <- 7 + 0.2 * (a %in% "A") + beta * cos(z1) * (a %in% "A") + rnorm(n, 0, sd)
+   
+   data.frame(y = y, a = a, z)
+ }
> 
> ## simulate data
> set.seed(123)
> beta <- 3
> ntrain <- 500
> ntest <- 100
> simdata <- simdata_s <- sim_data(p = 5, beta = beta, n = ntrain)
> tsimdata <- tsimdata_s <- sim_data(p = 5, beta = beta, n = ntest)
> simdata_s$cens <- rep(1, ntrain)
> tsimdata_s$cens <- rep(1, ntest)
> 
> ## base model
> basemodel_lm <- lm(y ~ a, data = simdata)
> basemodel_wb <- survreg(Surv(y, cens) ~ a, data = simdata_s)
> 
> ## forest
> frst_lm <- pmforest(basemodel_lm, ntree = 40, 
+                     perturb = list(replace = FALSE, fraction = 0.632),
+                     control = ctree_control(mincriterion = 0, lookahead = TRUE))
No data given. I'm using data set simdata from the current environment parent.frame(). 
                   Please check if that is what you want.
> frst_wb <- pmforest(basemodel_wb, ntree = 40, 
+                     perturb = list(replace = FALSE, fraction = 0.632),
+                     control = ctree_control(mincriterion = 0, lookahead = TRUE))
No data given. I'm using data set simdata_s from the current environment parent.frame(). 
                   Please check if that is what you want.
> 
> ## personalised models
> coefs_lm <- pmodel(x = frst_lm, newdata = tsimdata)
> summary(coefs_lm)
  (Intercept)          aA         
 Min.   :6.399   Min.   :-2.1793  
 1st Qu.:6.874   1st Qu.:-0.8731  
 Median :7.043   Median : 0.2253  
 Mean   :7.034   Mean   : 0.1006  
 3rd Qu.:7.209   3rd Qu.: 1.0125  
 Max.   :7.436   Max.   : 2.1326  
> 
> 
> coeffun <- function(model) {
+   ## model coefficients
+   coefs <- c(coef(model), scale = model$scale)
+   
+   ## difference in median survival 
+   p = 0.5
+   coefs["median_s0"] <- qweibull(p = p, shape = 1/coefs["scale"], 
+                                  scale = exp(coefs["(Intercept)"]))
+   coefs["median_s1"] <- qweibull(p = p, shape = 1/coefs["scale"], 
+                                  scale = exp(coefs["(Intercept)"] + coefs["aA"]))
+   coefs["median_sdiff"] <- coefs["median_s1"] - coefs["median_s0"]
+   
+   return(coefs)
+ }
> coefs_wb <- pmodel(x = frst_wb, newdata = tsimdata_s,
+                    fun = coeffun)
> summary(coefs_wb)
  (Intercept)          aA               scale          median_s0    
 Min.   :1.856   Min.   :-0.24360   Min.   :0.1302   Min.   :5.690  
 1st Qu.:1.965   1st Qu.: 0.02931   1st Qu.:0.1725   1st Qu.:6.604  
 Median :1.990   Median : 0.12703   Median :0.1998   Median :6.801  
 Mean   :1.984   Mean   : 0.10975   Mean   :0.2036   Mean   :6.758  
 3rd Qu.:2.008   3rd Qu.: 0.20695   3rd Qu.:0.2305   3rd Qu.:6.993  
 Max.   :2.048   Max.   : 0.35648   Max.   :0.3358   Max.   :7.297  
   median_s1      median_sdiff    
 Min.   :5.531   Min.   :-1.5256  
 1st Qu.:6.904   1st Qu.: 0.2058  
 Median :7.852   Median : 0.9173  
 Mean   :7.591   Mean   : 0.8328  
 3rd Qu.:8.249   3rd Qu.: 1.5560  
 Max.   :9.222   Max.   : 2.4738  
> 
> 
> ## dependence plot
> # library("ggplot2")
> # dp_lm <- cbind(coefs_lm, tsimdata)
> # dp_wb <- cbind(coefs_wb, tsimdata)
> # ggplot(tsimdata) +
> #   stat_function(fun = function(z1) 0.2 + beta * cos(z1), aes(color = "true treatment\neffect")) +
> #   geom_point(data = dp_lm, aes(y = aA, x = z1, color = "estimates lm"), alpha = 0.5) +
> #   geom_point(data = dp_wb, aes(y = median_sdiff, x = z1, color = "estimates wb"), alpha = 0.5)
> 
> 
> ## Variable importance
> of <- function(x, newdata = NULL, weights = NULL, 
+                perm = NULL, ...) {
+   - objfun(x, newdata = newdata, weights = weights, perm = perm, sum = TRUE, ...)
+ }
> vi_lm <- varimp(frst_lm, risk = of, nperm = 1)
> plot(data.frame(variable = names(vi_lm), VI = vi_lm))
> 
> proc.time()
   user  system elapsed 
 64.288   0.188  65.053 
