
R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("model4you")
Loading required package: partykit
Loading required package: grid
Loading required package: libcoin
Loading required package: mvtnorm
> library("survival")
> 
> ### survreg
> set.seed(1)
> data(GBSG2, package = "TH.data")
> 
> ## base model
> bmod <- survreg(Surv(time, cens) ~ horTh, data = GBSG2, model = TRUE)
> survplot(bmod)
> 
> ## partitioned model
> tr <- pmtree(bmod)
> plot(tr, terminal_panel = node_pmterminal(tr, plotfun = survplot, 
+                                           confint = TRUE))
> summary(tr)
Stratified model for node(s) 2, 4, 5

Model call:
survreg(formula = Surv(time, cens) ~ horTh, data = GBSG2, model = TRUE)

Coefficients:
            node 2 node 4 node 5
(Intercept) 7.8590 7.2936  6.981
horThyes    0.4001 0.3039  0.163

Number of obervations:
node 2 node 4 node 5 
   376    223     87 

Objective function:
(-1093.18) + (-1037.81) + (-457.96) = -2588.95> summary(tr, node = 1:2)
Stratified model for node(s) 1, 2

Model call:
survreg(formula = Surv(time, cens) ~ horTh, data = GBSG2, model = TRUE)

Coefficients:
            node 1 node 2
(Intercept)  7.608 7.8590
horThyes     0.306 0.4001

Number of obervations:
node 1 node 2 
   686    376 

Objective function:
   node 1    node 2 
-2632.096 -1093.182 
> 
> logLik(bmod)
'log Lik.' -2632.096 (df=3)
> logLik(tr)
'log Lik.' -2588.953 (df=9)
> 
> 
> ### glm binomial 
> set.seed(2)
> n <- 1000
> trt <- factor(rep(1:2, each = n/2))
> age <- sample(40:60, size = n, replace = TRUE)
> eff <- -1 + I(trt == 2) + 1 * I(trt == 2) * I(age > 50)
> expit <- function(x) 1/(1 + exp(-x))
> 
> success <- rbinom(n = n, size = 1, prob = expit(eff))
> 
> dat <- data.frame(success, trt, age)
> library("plyr")
> dattab <- ddply(.data = dat, .variables = .(trt, age), 
+                 function(x) data.frame(nsuccess = sum(x$success),
+                                        nfailure = NROW(x) - sum(x$success)))
> 
> bmod1 <- glm(success ~ trt, family = binomial)
> bmod2 <- glm(success ~ trt, family = "binomial")
> bmod3 <- glm(success ~ trt, data = dat, family = binomial)
> bmod4 <- glm(cbind(nsuccess, nfailure) ~ trt, data = dattab, family = binomial)
> 
> (tr1 <- pmtree(bmod1, data = dat))
[1] root
|   [2] age <= 50
|   |   [3] age <= 42: n = 153
|   |       (Intercept)        trt2 
|   |        -0.1300531   0.5027284 
|   |   [4] age > 42: n = 371
|   |       (Intercept)        trt2 
|   |        -0.9932518   0.7773634 
|   [5] age > 50: n = 476
|       (Intercept)        trt2 
|        -0.7958013   1.9056497 

Number of inner nodes:    2
Number of terminal nodes: 3
Number of parameters per node: 2
Log-likelihood: -621.198
> (tr2 <- pmtree(bmod2, data = dat))
[1] root
|   [2] age <= 50
|   |   [3] age <= 42: n = 153
|   |       (Intercept)        trt2 
|   |        -0.1300531   0.5027284 
|   |   [4] age > 42: n = 371
|   |       (Intercept)        trt2 
|   |        -0.9932518   0.7773634 
|   [5] age > 50: n = 476
|       (Intercept)        trt2 
|        -0.7958013   1.9056497 

Number of inner nodes:    2
Number of terminal nodes: 3
Number of parameters per node: 2
Log-likelihood: -621.198
> (tr3 <- pmtree(bmod3))
[1] root
|   [2] age <= 50
|   |   [3] age <= 42: n = 153
|   |       (Intercept)        trt2 
|   |        -0.1300531   0.5027284 
|   |   [4] age > 42: n = 371
|   |       (Intercept)        trt2 
|   |        -0.9932518   0.7773634 
|   [5] age > 50: n = 476
|       (Intercept)        trt2 
|        -0.7958013   1.9056497 

Number of inner nodes:    2
Number of terminal nodes: 3
Number of parameters per node: 2
Log-likelihood: -621.198
> (tr4 <- pmtree(bmod4))
[1] root
|   [2] age <= 50
|   |   [3] age <= 43: n = 8
|   |       (Intercept)        trt2 
|   |        -0.4367177   0.7420993 
|   |   [4] age > 43: n = 14
|   |       (Intercept)        trt2 
|   |        -0.9253406   0.6662319 
|   [5] age > 50: n = 20
|       (Intercept)        trt2 
|        -0.7958013   1.9056497 

Number of inner nodes:    2
Number of terminal nodes: 3
Number of parameters per node: 2
Log-likelihood: -94.40128
> 
> (mtr1 <- glmtree(success ~ trt | age, data = dat, family = binomial))
Generalized linear model tree (family: binomial)

Model formula:
success ~ trt | age

Fitted party:
[1] root
|   [2] age <= 50
|   |   [3] age <= 42: n = 153
|   |       (Intercept)        trt2 
|   |        -0.1300531   0.5027284 
|   |   [4] age > 42: n = 371
|   |       (Intercept)        trt2 
|   |        -0.9932518   0.7773634 
|   [5] age > 50: n = 476
|       (Intercept)        trt2 
|        -0.7958013   1.9056497 

Number of inner nodes:    2
Number of terminal nodes: 3
Number of parameters per node: 2
Objective function (log-likelihood): -621.198
> (mtr2 <- glmtree(cbind(nsuccess, nfailure) ~ trt | age, data = dattab, family = binomial))
Generalized linear model tree (family: binomial)

Model formula:
cbind(nsuccess, nfailure) ~ trt | age

Fitted party:
[1] root
|   [2] age <= 50: n = 22
|       (Intercept)        trt2 
|        -0.7161367   0.6703272 
|   [3] age > 50: n = 20
|       (Intercept)        trt2 
|        -0.7958013   1.9056497 

Number of inner nodes:    1
Number of terminal nodes: 2
Number of parameters per node: 2
Objective function (log-likelihood): -98.51297
> 
> library("strucchange")
Loading required package: zoo

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

Loading required package: sandwich
> sctest(tr3)
$`1`
                   age
statistic 1.754685e+01
p.value   1.547928e-04

$`2`
                  age
statistic 9.609115153
p.value   0.008192325

$`3`
                age
statistic 0.7184773
p.value   0.6982077

$`4`
                age
statistic 2.0024795
p.value   0.3674237

$`5`
                age
statistic 1.1781017
p.value   0.5548537

> sctest(tr4)
$`1`
                 age
statistic 7.40146997
p.value   0.02470536

$`2`
                 age
statistic 8.03869435
p.value   0.01796469

$`3`
NULL

$`4`
NULL

$`5`
                age
statistic 1.1198024
p.value   0.5712655

> 
> proc.time()
   user  system elapsed 
  5.232   0.032   5.268 
