\documentclass[nojss]{jss}

%\VignetteIndexEntry{Detecting Treatment-Subgroup Interactions with generalized linear mixed-effects model trees}
%\VignetteDepends{glmertree}
%\VignetteKeywords{mixed-effects model trees, recursive partitioning, decision trees}
%\VignettePackage{glmertree}

%% packages
\usepackage{amstext}
\usepackage{amsfonts}
\usepackage{amsmath}
\usepackage{thumbpdf}
\usepackage{rotating}
\usepackage{subfig}
%% need no \usepackage{Sweave}

\title{Detecting Treatment-Subgroup Interactions with Generalized Linear Mixed-effects Model Trees}
\Shorttitle{Detecting Treatment-Subgroup Interactions with glmertree}
\author{Marjolein Fokkema\\Universiteit Leiden}
\Plainauthor{Marjolein Fokkema}

\Abstract{
This vignette describes how generalized linear mixed-effects model trees can be used to detect treatment-subgroup interactions in clustered datasets. This is just one possible application of the \code{glmertree} package, which allows for fitting a wider range of partitioned generalized linear mixed-effects models. 
}

\Keywords{recursive partitioning, mixed-effects model trees, decision trees}

\Address{
  Marjolein Fokkema\\
  Department of Methods \& Statistics, Intitute of Psychology\\
  Universiteit Leiden\\
  Wassenaarseweg 52\\
  2333 AK Leiden, The Netherlands\\
  E-mail: \email{m.fokkema@fsw.leidenuniv.nl}\\
}


\begin{document}

\SweaveOpts{engine=R, keep.source=TRUE}

<<eval = TRUE, echo = FALSE>>=
library("glmertree")
@

\section{Introduction}

This vignette describes how generalized linear mixed-effects model trees can be used to detect treatment-subgroup interactions in clustered datasets. In the example, we assess main and interaction effects of a categorical variable (treatment) on a continuous response (treatment outcome), the \code{glmertree} package can be used to detect predictors and moderators in a much wider range of generalized linear mixed-effects models. For example, the response variable may be categorical, predictor variables may be continuous, or the interest may be in assessing main and interaction effects of multiple predictor variables at once. 

Generalized linear mixed-effects model trees estimate a global random-effects model, using all training observations. The fixed-effects model is estimated locally: the dataset is partitoned with respect to additional covariates or partitioning variables and a fixed-effects model is estimated in each cell of the partition. The \code{glmertree} package makes use of the \code{partykit} package \cite{HothyZeil15} to find the partition and the \code{lme4} package \cite{BateyMeac15} to fit the mixed-effects model.


\section{Fitting and interpreting mixed-effects model trees}

The main functions in the \code{glmertree} package are \code{lmertree()}, for continuous outcome variables, and \code{glmertree()}, for binary or count outcome variables. Both functions require the user to specify at least two arguments: \code{formula} and \code{data}. The data we will be using is an artificial motivating dataset from \cite{FokkySmit17} and can be loaded as follows: 

<<echo = TRUE>>=
load("C:\\Users\\fokkemam\\Desktop\\swReg\\glmertree\\data\\DepressionDemo.rda")
#data(DepressionDemo)
summary(DepressionDemo)
@

The dataset includes six variables: a response variable (depression), a predictor variable for the linear model (treatment), three potential partitioning variables (age, anxiety, durations) and an indicator for cluster (cluster).

The model formula to be specified consists of a left- and right hand side. The left hand side of the model formula (preceding the tilde symbol) specifies the outcome variable. The right hand side consists of three parts, separated by vertical bars: The first part specifies the predictor variable(s) of the (generalized) linear model, the second part specifies the random effects and the third part specifies the potential partitioning variables:

<<eval = TRUE, echo = TRUE>>=
lmm_tree <- lmertree(depression ~ treatment | cluster | age + duration + 
                              anxiety, data = DepressionDemo)
@

Note that in the example above, the partitioning variables are continuous, but (ordered) categorical partitioning variables may also be specified. Also, we specified only a single variable in the random-effects part, resulting in estimation of a random intercept with respect to \code{cluster}. More complex random effects can also be specified: for example, specifying the random-effects part as \code{(1 + age | cluster)} would yield a model with a random intercept as well as a random slope for age with respect to cluster. The brackets are necessary to protect the vertical bars in the random effects formulation.

Using the \code{plot} method, we can plot the resulting tree and random effects:

<<eval = FALSE, echo = TRUE>>=
plot(lmm_tree)
@

\begin{figure}[h!]
\centering
\setkeys{Gin}{width=0.8\textwidth}
<<eval = TRUE, echo = FALSE, fig = TRUE, width = 9, height = 7>>=
plot(lmm_tree, which = "tree")
@
\caption{\label{fig:tree} Linear mixed-effects model tree}
\end{figure}

\begin{figure}[h!]
\centering
\setkeys{Gin}{width=0.5\textwidth}
<<echo = FALSE, results = hide, fig = TRUE>>=
plot(lmm_tree, which = "ranef")
@
\caption{\label{fig:ranef} Random effects}
\end{figure}

Using the argument \code{which}, we can also specify which part of the model should be plotted: \code{which = "tree"} plots only the tree, \code{which = "ranef"} plots only the predicted random effects and \code{which = "all"} (the default) plots the tree as well as the random effects. 

The plotted tree is depicted in Figure~\ref{fig:tree}. In every inner node of the plotted tree, the splitting variable and corresponding p-value from the parameter stability test is reported. To control for multiple testing, the p-values are Bonferroni corrected, by default. This can be turned off by adding \code{bonferroni = FALSE} to the function call, yielding a less conservative criterion for the parameter stability tests, but note that this will increase the likelihood of overfitting. The significance level $\alpha$ equals .05 by default, but a different value, say for example .01, can be specified by including \code{alpha = .01} in the function call.  

The plotted tree shows that there are three subgroups with differential treatment effectiveness: node 3 indicates that for patients with lower duration and lower anxiety, Treatment 1 leads to lower post-treatment depression. Node 4 indicates that for patients with lower duration and higher anxiety, both treatments yield more or less the same expected outcome. Node 5 indicates, that for patients with higher duration, Treatment 2 leads to lower post-treatment depression.

The predicted random effects are plotted in Figure~\ref{fig:ranef}. Patients from cluster 10 have somewhat higher expected post-treatment depression scores, whereas patients from cluster 4 have somewhat lower expected post-treatment depression scores.

To obtain numerical results, \code{print}, \code{coef} and \code{ranef} methods are available:

<<echo = TRUE, eval = TRUE>>=
print(lmm_tree)
coef(lmm_tree)
ranef(lmm_tree)
@

To obtain predicted values, the \code{predict} method can be used: 

<<echo = TRUE, eval = TRUE>>=
predict(lmm_tree, newdata = DepressionDemo[1:7,])
@

When \code{newdata} is not specified, predictions for the training observations are returned, by default. Random effects can be excluded from the predictions by adding \code{re.form = NA}. This is useful, for example, when \code{newdata} is specified, but the new observations do not have a cluster indicator or are from new clusters:

<<echo = TRUE, eval = TRUE>>=
predict(lmm_tree, newdata = DepressionDemo[1:7, -3], re.form = NA)
@


\section{Inspecting residuals}

Residuals of the fitted GLMM tree can be obtained with the \code{residuals} method. This can be useful for assessing potential misspecification of the model (e.g., heteroscedasticity):

<<eval = FALSE, echo = TRUE>>=
resids <- residuals(lmm_tree)
preds <- predict(lmm_tree)
plot(DepressionDemo$cluster, resids)
scatter.smooth(preds, resids)
@


\begin{figure}[h!]
\setkeys{Gin}{width=0.5\textwidth}
\centering
\subfloat{
<<eval = TRUE, echo = FALSE, fig = TRUE>>=
resids <- residuals(lmm_tree)
preds <- predict(lmm_tree)
plot(DepressionDemo$cluster, resids, xlab = "Cluster indicator", ylab = "Residuals")
@
}
\subfloat{
<<eval = TRUE, echo = FALSE, fig = TRUE>>=
scatter.smooth(preds, resids, xlab = "Predicted values", ylab = "Residuals")
@
}
\caption{\label{fig:residuals} Residuals of the fitted linear mixed-effects model tree}
\end{figure}

The plotted residuals are depicted in Figure~\ref{fig:residuals}. The first plot does not indicate substantial variation in error variances across levels of the random effects. The second plot of fitted values against residuals also does not reveal a pattern indicating model misspecification.



\bibliography{glmertree}
    
\end{document}
