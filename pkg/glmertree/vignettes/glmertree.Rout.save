
> library("glmertree")
Loading required package: lme4
Loading required package: Matrix
Loading required package: partykit
Loading required package: grid
Loading required package: libcoin
Loading required package: mvtnorm

> options(width = 70, prompt = "R> ", continue = "+  ")

> data("DepressionDemo", package = "glmertree")

> summary(DepressionDemo)
   depression          treatment     cluster          age    
 Min.   : 3.00   Treatment 1:78   Min.   : 1.0   Min.   :18  
 1st Qu.: 7.00   Treatment 2:72   1st Qu.: 3.0   1st Qu.:39  
 Median : 9.00                    Median : 5.5   Median :45  
 Mean   : 9.12                    Mean   : 5.5   Mean   :45  
 3rd Qu.:11.00                    3rd Qu.: 8.0   3rd Qu.:52  
 Max.   :16.00                    Max.   :10.0   Max.   :69  
    anxiety         duration      depression_bin
 Min.   : 3.00   Min.   : 1.000   0:78          
 1st Qu.: 8.00   1st Qu.: 5.000   1:72          
 Median :10.00   Median : 7.000                 
 Mean   :10.26   Mean   : 6.973                 
 3rd Qu.:12.00   3rd Qu.: 9.000                 
 Max.   :18.00   Max.   :17.000                 

> lmm_tree <- lmertree(depression ~ treatment | cluster | 
+     age + duration + anxiety, data = DepressionDemo)

> glmm_tree <- glmertree(depression_bin ~ treatment | 
+     cluster | age + duration + anxiety, data = DepressionDemo, 
+     family = binomial)

> plot(lmm_tree, which = "tree")

> plot(lmm_tree, which = "ranef")
$cluster


> print(lmm_tree)
Linear mixed model tree

Model formula:
depression ~ treatment | age + duration + anxiety

Fitted party:
[1] root
|   [2] duration <= 8
|   |   [3] anxiety <= 10: n = 53
|   |                (Intercept) treatmentTreatment 2 
|   |                   7.458519             4.183184 
|   |   [4] anxiety > 10: n = 54
|   |                (Intercept) treatmentTreatment 2 
|   |                   8.612009             0.513343 
|   [5] duration > 8: n = 43
|                (Intercept) treatmentTreatment 2 
|                  11.098602            -4.584979 

Number of inner nodes:    2
Number of terminal nodes: 3
Number of parameters per node: 2
Objective function (residual sum of squares): 520.2838

Random effects:
$cluster
   (Intercept)
1  -0.30964409
2  -0.34154568
3  -0.06755141
4  -0.57675658
5  -0.15247281
6  -0.08761704
7   0.12905520
8   0.22500905
9   0.26125689
10  0.92026648


> coef(lmm_tree)
  (Intercept) treatmentTreatment 2
3    7.458519             4.183184
4    8.612009             0.513343
5   11.098602            -4.584979

> ranef(lmm_tree)
$cluster
   (Intercept)
1  -0.30964409
2  -0.34154568
3  -0.06755141
4  -0.57675658
5  -0.15247281
6  -0.08761704
7   0.12905520
8   0.22500905
9   0.26125689
10  0.92026648


> predict(lmm_tree, newdata = DepressionDemo[1:7, ])
        1         2         3         4         5         6         7 
10.777968 11.554672  7.158595  9.045117 11.280677  8.816418 11.883480 

> predict(lmm_tree, newdata = DepressionDemo[1:7, -3], 
+     re.form = NA)
        1         2         3         4         5         6         7 
11.087612 11.622223  7.500140  9.112668 11.622223  8.591409 11.622223 

> resids <- residuals(lmm_tree)

> preds <- predict(lmm_tree)

> plot(factor(DepressionDemo$cluster), resids, xlab = "Cluster", 
+     ylab = "Residuals")

> scatter.smooth(preds, resids, xlab = "Predicted values", 
+     ylab = "Residuals")

> set.seed(123)

> treatment <- rbinom(n = 150, size = 1, prob = 0.5)

> duration <- round(rnorm(150, mean = 7, sd = 3))

> anxiety <- round(rnorm(150, mean = 10, sd = 3))

> age <- round(rnorm(150, mean = 45, sd = 10))

> error <- rnorm(150, 0, 2)

> cluster <- error + rnorm(150, 0, 6)

> rand_int <- sort(rep(rnorm(10, 0, 1), each = 15))

> rand_int[order(cluster)] <- rand_int

> error <- error - rand_int

> cluster[order(cluster)] <- rep(1:10, each = 15)

> node3t1 <- ifelse(duration <= 8 & anxiety <= 10 & 
+     treatment == 0, -2, 0)

> node3t2 <- ifelse(duration <= 8 & anxiety <= 10 & 
+     treatment == 1, 2, 0)

> node5t1 <- ifelse(duration > 8 & treatment == 0, 2.5, 
+     0)

> node5t2 <- ifelse(duration > 8 & treatment == 1, -2.5, 
+     0)

> depression <- round(9 + node3t1 + node3t2 + node5t1 + 
+     node5t2 + 0.4 * treatment + error + rand_int)

> depression_bin <- factor(as.numeric(depression > 9))

> treatment <- factor(treatment, labels = c("Treatment 1", 
+     "Treatment 2"))

> DepressionDemo <- data.frame(depression, treatment, 
+     cluster, age, anxiety, duration, depression_bin)

 *** Run successfully completed ***
> proc.time()
   user  system elapsed 
  5.088   0.048   5.132 
