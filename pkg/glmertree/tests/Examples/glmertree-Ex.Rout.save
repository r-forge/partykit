
R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "glmertree"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('glmertree')
Loading required package: lme4
Loading required package: Matrix
Loading required package: partykit
Loading required package: grid
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("DepressionDemo")
> ### * DepressionDemo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: DepressionDemo
> ### Title: Artificial depression treatment dataset
> ### Aliases: DepressionDemo
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("glmertree")
> ### * glmertree
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: glmertree
> ### Title: (Generalized) Linear Mixed Model Trees
> ### Aliases: lmertree glmertree print.lmertree plot.lmertree coef.lmertree
> ###   ranef.lmertree logLik.lmertree model.frame.lmertree predict.lmertree
> ###   terms.lmertree as.party.lmertree residuals.lmertree resid.lmertree
> ###   print.glmertree plot.glmertree coef.glmertree ranef.glmertree
> ###   logLik.glmertree model.frame.glmertree predict.glmertree
> ###   terms.glmertree as.party.glmertree residuals.glmertree
> ###   resid.glmertree
> ### Keywords: tree
> 
> ### ** Examples
> 
> ## artificial example data
> data("DepressionDemo", package = "glmertree")
> 
> ## fit normal linear regression LMM tree for continuous outcome
> lt <- lmertree(depression ~ treatment | cluster | age + anxiety + duration,
+   data = DepressionDemo)
> plot(lt, which = "all") # default behavior, which may also be "tree" or "ranef" 
$cluster

> coef(lt)
  (Intercept) treatmentTreatment 2
3    7.458519             4.183184
4    8.612009             0.513343
5   11.098602            -4.584979
> predict(lt, re.form = NA) # excludes random effects, see ?lme4::predict.merMod
        1         2         3         4         5         6         7         8 
11.087612 11.622223  7.500141  9.112668 11.622223  8.591409 11.622223  9.112668 
        9        10        11        12        13        14        15        16 
 6.540726  7.500141 11.622223 11.087612  9.112668  9.112668 11.087612  6.540726 
       17        18        19        20        21        22        23        24 
11.087612  8.591409  7.500141  6.540726  9.112668  6.540726  6.540726 11.622223 
       25        26        27        28        29        30        31        32 
 9.112668 11.622223 11.622223 11.622223  7.500141  8.591409 11.622223  9.112668 
       33        34        35        36        37        38        39        40 
 9.112668 11.622223 11.087612  7.500141  6.540726  7.500141  8.591409 11.087612 
       41        42        43        44        45        46        47        48 
 8.591409  7.500141  7.500141  7.500141  7.500141  8.591409  8.591409  8.591409 
       49        50        51        52        53        54        55        56 
 7.500141  6.540726  7.500141  8.591409 11.622223  8.591409 11.622223 11.087612 
       57        58        59        60        61        62        63        64 
 8.591409  9.112668 11.622223  7.500141  6.540726  8.591409 11.087612 11.087612 
       65        66        67        68        69        70        71        72 
 9.112668 11.087612  9.112668  9.112668 11.622223  8.591409 11.622223  9.112668 
       73        74        75        76        77        78        79        80 
 6.540726 11.087612  8.591409 11.087612 11.087612 11.622223  7.500141  7.500141 
       81        82        83        84        85        86        87        88 
 8.591409  6.540726  8.591409  6.540726  8.591409 11.087612  9.112668 11.622223 
       89        90        91        92        93        94        95        96 
 6.540726  7.500141  8.591409  6.540726  7.500141  6.540726  8.591409  8.591409 
       97        98        99       100       101       102       103       104 
 9.112668  7.500141 11.087612 11.622223  9.112668  7.500141  8.591409  9.112668 
      105       106       107       108       109       110       111       112 
 7.500141  9.112668  6.540726 11.622223  8.591409  8.591409 11.622223 11.087612 
      113       114       115       116       117       118       119       120 
 7.500141  6.540726 11.622223  8.591409  9.112668  9.112668 11.622223  7.500141 
      121       122       123       124       125       126       127       128 
 6.540726 11.087612  7.500141  7.500141  7.500141  6.540726 11.087612  7.500141 
      129       130       131       132       133       134       135       136 
11.087612 11.622223  9.112668  9.112668 11.622223  6.540726  9.112668 11.622223 
      137       138       139       140       141       142       143       144 
 9.112668  6.540726  9.112668  8.591409 11.087612  8.591409  7.500141  8.591409 
      145       146       147       148       149       150 
11.622223  8.591409 11.087612 11.087612 11.087612  9.112668 
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  4.116 0.048 4.164 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')

